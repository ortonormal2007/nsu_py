#!/usr/bin/env python

# credit_cards1 (обязательная)

# Напишите программу для генерирования и проверки 
# валидности номеров кредитных карт трёх видов:
#   - MasterCard 16 цифр
#   - AmericanExpress 15 цифр
#   - Visa 13, 16 или 19 цифр

# Шаг 1. Реализуйте функцию calc_luhn

import pytest

def calc_luhn(n):
    odd = sum(int(x) for x in str(n)[-1::-2])
    even = sum(sum(int(y) for y in str(int(x) * 2)) for x in str(n)[-2::-2])
    return (odd + even) % 10
    # Принимает на вход число.
    # Вычисляет остаток от деления на 10 контрольной суммы,
    # полученной по алгоритму Луна: 
    #   - нечётные цифры, считая справа, просто суммируем
    #   - чётные цифры, считая справа, умножаем на 2, 
    # суммируем отдельные цифры получившихся чисел
    #   - суммируем эти два результата.
    # Например:
    # n = '2  3  6  7  8'
    #        x2    x2 
    # 8 + 6 + 2 + (1 + 4) + 6 = 27
    # res = 7

def test_calc_luhn():
    assert calc_luhn(1) == 1
    assert calc_luhn(23) == 7
    assert calc_luhn(23678) == 7
    assert calc_luhn(23978) == 0

if __name__ == '__main__':
    # При таком способе вызова каждый assert вместо просто да/нет будет
    # выдавать более детальную информацию, если что-то пошло не так.
    pytest.main([__file__])
#    pytest.main(['__file__ + '::test3'])    # запускает только третий тест
#    pytest.main(['-s', __file__ + '::test3'])   # то же + возможность отладки ipdb

